
<BugCollection sequence='0' release='' analysisTimestamp='1578952428883' version='3.1.8' timestamp='1578952252000'><Project projectName='maven-static-code-analysis'><Jar>/home/yacine/maven-jenkins-labs/maven-labs/maven-static-code-analysis/target/classes</Jar><SrcDir>/home/yacine/maven-jenkins-labs/maven-labs/maven-static-code-analysis/src/main/java</SrcDir><WrkDir>/home/yacine/maven-jenkins-labs/maven-labs/maven-static-code-analysis/target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='bfb9da60f86eda35f6a3aac06407e71b' rank='18' abbrev='SBSC' category='PERFORMANCE' priority='2' type='SBSC_USE_STRINGBUFFER_CONCATENATION' instanceOccurrenceMax='0'><ShortMessage>La méthode concatène des chaînes au moyen de + en boucle</ShortMessage><LongMessage>La méthode com.mkyong.examples.StaticCodeExample.test() concatène des chaînes au moyen de + en boucle</LongMessage><Class classname='com.mkyong.examples.StaticCodeExample' primary='true'><SourceLine classname='com.mkyong.examples.StaticCodeExample' start='3' end='23' sourcepath='com/mkyong/examples/StaticCodeExample.java' sourcefile='StaticCodeExample.java'><Message>At StaticCodeExample.java:[lines 3-23]</Message></SourceLine><Message>In class com.mkyong.examples.StaticCodeExample</Message></Class><Method isStatic='false' classname='com.mkyong.examples.StaticCodeExample' signature='()V' name='test' primary='true'><SourceLine endBytecode='195' classname='com.mkyong.examples.StaticCodeExample' start='13' end='23' sourcepath='com/mkyong/examples/StaticCodeExample.java' sourcefile='StaticCodeExample.java' startBytecode='0'></SourceLine><Message>In method com.mkyong.examples.StaticCodeExample.test()</Message></Method><SourceLine endBytecode='41' classname='com.mkyong.examples.StaticCodeExample' start='18' end='18' sourcepath='com/mkyong/examples/StaticCodeExample.java' sourcefile='StaticCodeExample.java' startBytecode='41' primary='true'><Message>At StaticCodeExample.java:[line 18]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='af969f063e10cd8bd07045ad4e63fb67' rank='18' abbrev='UuF' category='PERFORMANCE' priority='2' type='UUF_UNUSED_FIELD' instanceOccurrenceMax='0'><ShortMessage>Champ inutilisé</ShortMessage><LongMessage>Champ inutilisé : com.mkyong.examples.StaticCodeExample.abc</LongMessage><Class classname='com.mkyong.examples.StaticCodeExample' primary='true'><SourceLine classname='com.mkyong.examples.StaticCodeExample' start='3' end='23' sourcepath='com/mkyong/examples/StaticCodeExample.java' sourcefile='StaticCodeExample.java'><Message>At StaticCodeExample.java:[lines 3-23]</Message></SourceLine><Message>In class com.mkyong.examples.StaticCodeExample</Message></Class><Field isStatic='false' classname='com.mkyong.examples.StaticCodeExample' signature='I' name='abc' primary='true'><SourceLine classname='com.mkyong.examples.StaticCodeExample' sourcepath='com/mkyong/examples/StaticCodeExample.java' sourcefile='StaticCodeExample.java'><Message>In StaticCodeExample.java</Message></SourceLine><Message>Field com.mkyong.examples.StaticCodeExample.abc</Message></Field><SourceLine synthetic='true' classname='com.mkyong.examples.StaticCodeExample' sourcepath='com/mkyong/examples/StaticCodeExample.java' sourcefile='StaticCodeExample.java'><Message>In StaticCodeExample.java</Message></SourceLine></BugInstance><BugCategory category='PERFORMANCE'><Description>Performance</Description></BugCategory><BugPattern abbrev='UuF' category='PERFORMANCE' type='UUF_UNUSED_FIELD'><ShortDescription>Champ inutilisé</ShortDescription><Details>

&lt;p&gt;Ce champ n'est jamais utilisé. Envisagez de le supprimer de la classe.&lt;/p&gt;

  </Details></BugPattern><BugPattern abbrev='SBSC' category='PERFORMANCE' type='SBSC_USE_STRINGBUFFER_CONCATENATION'><ShortDescription>La méthode concatène des chaînes au moyen de + en boucle</ShortDescription><Details>

&lt;p&gt;Cette méthode semble construire une &lt;ocde&gt;String&lt;/code&gt; en utilisant une concaténation en boucle. A chaque itération, l'objet &lt;code&gt;String&lt;/code&gt; est converti en &lt;code&gt;StringBuffer&lt;/code&gt;/&lt;code&gt;StringBuilder&lt;/code&gt;, complété, puis de nouveau converti en &lt;code&gt;String&lt;/code&gt;. Ceci a un coût exponentiel en fonction du nombre d'itérations, puisque la chaîne est recopiée à chaque itération.&lt;/p&gt;
&lt;p&gt;De meilleurs performances peuvent être obtenues en utilisant explicitement &lt;code&gt;StringBuffer&lt;/code&gt; (ou &lt;code&gt;StringBuilder&lt;/code&gt; en Java 5).&lt;/p&gt;
&lt;p&gt;Par exemple :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
// C'est mal !
String s = "";
for (int i = 0; i &amp;lt; field.length; ++i) {
  s = s + field[i];
}

// C'est mieux...
StringBuffer buf = new StringBuffer();
for (int i = 0; i &amp;lt; field.length; ++i) {
  buf.append(field[i]);
}
String s = buf.toString();
&lt;/code&gt;&lt;/pre&gt;

  </Details></BugPattern><BugCode abbrev='UuF'><Description>Champ inutilisé</Description></BugCode><BugCode abbrev='SBSC'><Description>Concaténation de chaînes au moyen de + dans une boucle</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='1' total_classes='1' priority_2='2' total_size='13' clock_seconds='2.56' referenced_classes='12' vm_version='25.111-b14' total_bugs='2' java_version='1.8.0_111' gc_seconds='0.05' alloc_mbytes='455.25' cpu_seconds='4.48' peak_mbytes='93.79' timestamp='Mon, 13 Jan 2020 22:50:52 +0100'><FileStats path='com/mkyong/examples/StaticCodeExample.java' size='13' bugHash='155d3d6dc947b6ec27493da51590052f' bugCount='2'></FileStats><PackageStats package='com.mkyong.examples' total_bugs='2' priority_2='2' total_size='13' total_types='1'><ClassStats bugs='2' size='13' priority_2='2' interface='false' sourceFile='StaticCodeExample.java' class='com.mkyong.examples.StaticCodeExample'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='1214' totalMilliseconds='406' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='20488' standardDeviationMicrosecondsPerInvocation='2745' invocations='335'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='793' totalMilliseconds='266' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='89106' standardDeviationMicrosecondsPerInvocation='5281' invocations='336'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='10691' totalMilliseconds='128' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='42767' standardDeviationMicrosecondsPerInvocation='14229' invocations='12'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1981' totalMilliseconds='120' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='19678' standardDeviationMicrosecondsPerInvocation='3636' invocations='61'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='333' totalMilliseconds='100' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='12116' standardDeviationMicrosecondsPerInvocation='967' invocations='303'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='6749' totalMilliseconds='80' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' maxMicrosecondsPerInvocation='31236' standardDeviationMicrosecondsPerInvocation='9048' invocations='12'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2434' totalMilliseconds='65' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='25525' standardDeviationMicrosecondsPerInvocation='5367' invocations='27'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='4256' totalMilliseconds='51' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' maxMicrosecondsPerInvocation='20543' standardDeviationMicrosecondsPerInvocation='6099' invocations='12'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='24334' totalMilliseconds='48' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' maxMicrosecondsPerInvocation='47375' standardDeviationMicrosecondsPerInvocation='23041' invocations='2'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='17447' totalMilliseconds='34' name='edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory' maxMicrosecondsPerInvocation='19556' standardDeviationMicrosecondsPerInvocation='2105' invocations='2'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2755' totalMilliseconds='33' name='edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures' maxMicrosecondsPerInvocation='16741' standardDeviationMicrosecondsPerInvocation='4488' invocations='12'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>